{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/compose/compose.component.html","/./src/app/edit/edit.component.html","/./src/app/home/home.component.html","/./src/app/login/login.component.html","/./src/app/singup/singup.component.html","/./src/app/toolbar/toolbar.component.html","/./src/app/app-routing.module.ts","/./src/app/app-routing/routes.ts","/./src/app/app.component.scss","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/compose/compose.component.scss","/./src/app/compose/compose.component.ts","/./src/app/edit/edit.component.scss","/./src/app/edit/edit.component.ts","/./src/app/home/home.component.scss","/./src/app/home/home.component.ts","/./src/app/login/login.component.scss","/./src/app/login/login.component.ts","/./src/app/services/auth-guard.service.ts","/./src/app/services/auth.interceptor.ts","/./src/app/services/auth.service.ts","/./src/app/services/tweet.service.ts","/./src/app/shared/baseurl.ts","/./src/app/singup/singup.component.scss","/./src/app/singup/singup.component.ts","/./src/app/toolbar/toolbar.component.scss","/./src/app/toolbar/toolbar.component.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-toolbar></app-toolbar>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    Compose\\n    <span class=\\\"flex-spacer\\\"></span>\\n    <button mat-button mat-dialog-close>&times;</button>\\n</mat-toolbar>\\n\\n<form novalidate [formGroup]=\\\"composeForm\\\" ##fform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <p>\\n        <mat-form-field>\\n            <input matInput formControlName=\\\"topic\\\" placeholder=\\\"Topic\\\" type=\\\"text\\\" required>\\n            <mat-error *ngIf=\\\"formErrors.topic\\\">\\n                {{ formErrors.topic}}\\n            </mat-error>\\n        </mat-form-field>\\n    </p>\\n    <p>\\n        <mat-form-field>\\n            <textarea matInput formControlName=\\\"comment\\\" placeholder=\\\"Type your comment\\\" rows=\\\"10\\\" cols=\\\"100\\\" required>\\n            </textarea>\\n            <mat-error *ngIf=\\\"formErrors.comment\\\">\\n                {{ formErrors.comment}}\\n            </mat-error>\\n        </mat-form-field>\\n    </p>\\n    <span class=\\\"flex-spacer\\\"></span>\\n    <button mat-button mat-dialog-close>Cancel</button>\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"\\n        [disabled]=\\\"composeForm.invalid\\\">Publish</button>\\n</form>\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    Edit\\n    <span class=\\\"flex-spacer\\\"></span>\\n    <button mat-button mat-dialog-close>&times;</button>\\n</mat-toolbar>\\n\\n<form novalidate [formGroup]=\\\"editForm\\\" ##fform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <p>\\n        <mat-form-field>\\n            <input matInput formControlName=\\\"topic\\\" placeholder=\\\"Topic\\\" type=\\\"text\\\" required>\\n            <mat-error *ngIf=\\\"formErrors.topic\\\">\\n                {{ formErrors.topic}}\\n            </mat-error>\\n        </mat-form-field>\\n    </p>\\n    <p>\\n        <mat-form-field>\\n            <textarea matInput formControlName=\\\"comment\\\" placeholder=\\\"Type your comment\\\" rows=\\\"10\\\" cols=\\\"100\\\" required>\\n            </textarea>\\n            <mat-error *ngIf=\\\"formErrors.comment\\\">\\n                {{ formErrors.comment}}\\n            </mat-error>\\n        </mat-form-field>\\n    </p>\\n    <span class=\\\"flex-spacer\\\"></span>\\n    <button mat-button mat-dialog-close>Cancel</button>\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"\\n        [disabled]=\\\"editForm.invalid\\\">Change</button>\\n</form>\\n\"","module.exports = \"<div class=\\\"container\\\"\\n    fxLayout=\\\"row\\\"\\n    fxLayout.sm=\\\"column\\\"\\n    fxLayout.xs=\\\"column\\\"\\n    fxLayoutGap=\\\"10px\\\"\\n    fxLayoutGap.xs=\\\"0\\\">\\n\\n    <div fxFlex=\\\"20\\\">\\n        <h3>\\n            Filter\\n        </h3>\\n        <form novalidate [formGroup]=\\\"filterForm\\\" #fform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <p>\\n                <mat-form-field>\\n                    <input matInput formControlName=\\\"author\\\" placeholder=\\\"Author\\\" type=\\\"text\\\">\\n                </mat-form-field>\\n            </p>\\n            <p>\\n                <mat-form-field>\\n                    <input matInput formControlName=\\\"topic\\\" placeholder=\\\"Topic\\\" type=\\\"text\\\">\\n                </mat-form-field>\\n            </p>\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">\\n                Filter\\n            </button>\\n             <button style=\\\"margin-left:5px\\\" type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">\\n                Refresh\\n            </button>\\n        </form>\\n        <mat-divider class=\\\"space-top\\\"></mat-divider>\\n        <div *ngIf=\\\"username\\\">\\n            <button class=\\\"space-top\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"openComposeForm()\\\">Compose</button>\\n        </div>\\n    </div>\\n\\n    <mat-divider [vertical]=\\\"true\\\"></mat-divider>\\n\\n    <div fxFlex=\\\"80\\\">\\n        <h3>Feed</h3>\\n        <mat-list *ngIf=\\\"tweets\\\">\\n            <mat-list-item *ngFor=\\\"let tweet of tweets\\\">\\n                <p matLine>@{{tweet.author}}</p>\\n                <p class=\\\"gray-text\\\" matLine>#{{tweet.topic}} {{tweet.createdAt | date}}</p>\\n                <p matLine>{{tweet.content}}</p>\\n                <div *ngIf=\\\"username && username == tweet.author\\\" matLine>\\n                    <button mat-raised-button class=\\\"separate\\\" (click)=\\\"openEditForm(tweet)\\\">Edit</button>\\n                    <button mat-raised-button class=\\\"separate\\\" (click)=\\\"deleteTweet(tweet)\\\">Delete</button>\\n                </div>\\n            </mat-list-item>\\n        </mat-list>\\n    </div>\\n\\n    <div fxFlex=\\\"80\\\" [hidden]=\\\"tweets\\\">\\n        <mat-spinner></mat-spinner> <h4>Loading . . . Please Wait</h4>\\n    </div>\\n\\n</div>\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    Login\\n    <span class=\\\"flex-spacer\\\"></span>\\n    <button mat-button mat-dialog-close>&times;</button>\\n</mat-toolbar>\\n\\n<form novalidate [formGroup]=\\\"loginForm\\\" ##fform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <p>\\n        <mat-form-field>\\n            <input matInput formControlName=\\\"username\\\" placeholder=\\\"Username\\\" type=\\\"text\\\" required>\\n            <mat-error *ngIf=\\\"formErrors.username\\\">\\n                {{ formErrors.username }}\\n            </mat-error>\\n        </mat-form-field>\\n    </p>\\n    <p>\\n        <mat-form-field>\\n            <input matInput formControlName=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" required>\\n            <mat-error *ngIf=\\\"formErrors.password\\\">\\n                {{ formErrors.password }}\\n            </mat-error>\\n        </mat-form-field>\\n    </p>\\n    <span class=\\\"flex-spacer\\\"></span>\\n    <button mat-button mat-dialog-close>Cancel</button>\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"\\n        [disabled]=\\\"loginForm.invalid\\\">Login</button>\\n</form>\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    Signup\\n    <span class=\\\"flex-spacer\\\"></span>\\n    <button mat-button mat-dialog-close>&times;</button>\\n</mat-toolbar>\\n\\n<form novalidate [formGroup]=\\\"signupForm\\\" ##fform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <p>\\n        <mat-form-field>\\n            <input matInput formControlName=\\\"username\\\" placeholder=\\\"Username\\\" type=\\\"text\\\" required>\\n            <mat-error *ngIf=\\\"formErrors.username\\\">\\n                {{ formErrors.username }}\\n            </mat-error>\\n        </mat-form-field>\\n    </p>\\n    <p>\\n        <mat-form-field>\\n            <input matInput formControlName=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" required>\\n            <mat-error *ngIf=\\\"formErrors.password\\\">\\n                {{ formErrors.password }}\\n            </mat-error>\\n        </mat-form-field>\\n    </p>\\n    <span class=\\\"flex-spacer\\\"></span>\\n    <button mat-button mat-dialog-close>Cancel</button>\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"\\n        [disabled]=\\\"signupForm.invalid\\\">Sign up</button>\\n</form>\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <span>Comments</span>\\n    <span class=\\\"flex-spacer\\\"></span>\\n    <div *ngIf=\\\"!user\\\">\\n        <button mat-button (click)=\\\"openLoginForm()\\\">Login</button>\\n    </div>\\n    <div *ngIf=\\\"user\\\">\\n        <button mat-button (click)=\\\"logOut()\\\">Logout</button>\\n    </div>\\n    <button mat-button (click)=\\\"openSignUpForm()\\\">Sign up</button>\\n</mat-toolbar>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { routes } from './app-routing/routes';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","import { Routes } from '@angular/router';\n\nimport { HomeComponent } from '../home/home.component';\n\nexport const routes: Routes = [\n    { path: 'home', component: HomeComponent },\n    { path: '', redirectTo: '/home', pathMatch: 'full'}\n];","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'FakeTwitter';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppRoutingModule } from './app-routing.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { TweetService } from './services/tweet.service';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { AuthInterceptor, UnauthorizedInterceptor } from './services/auth.interceptor';\n\nimport { baseURL } from './shared/baseurl';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { ComposeComponent } from './compose/compose.component';\nimport { SingupComponent } from './singup/singup.component';\nimport { EditComponent } from './edit/edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ToolbarComponent,\n    LoginComponent,\n    ComposeComponent,\n    SingupComponent,\n    EditComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatListModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  providers: [\n    TweetService,\n    AuthService,\n    AuthGuardService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: UnauthorizedInterceptor,\n      multi: true\n    },\n    {provide: 'BaseURL', useValue: baseURL}\n  ],\n  entryComponents: [\n    LoginComponent,\n    SingupComponent,\n    ComposeComponent,\n    EditComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvc2UvY29tcG9zZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { TweetService } from '../services/tweet.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-compose',\n  templateUrl: './compose.component.html',\n  styleUrls: ['./compose.component.scss']\n})\nexport class ComposeComponent implements OnInit {\n\n  username: string;\n  composeForm: FormGroup;\n  @ViewChild('fform', {static: false}) composeFormDirective;\n\n  formErrors = {\n    'topic': '',\n    'comment': ''\n  }\n\n  validationMessages = {\n    'topic': {\n      'required': 'A topic is required',\n      'maxlength': 'The topic cannot be more than 25 characters long'\n    },\n    'comment': {\n      'required': 'A comment is required',\n      'maxlength': 'The comment cannot be more than 500 characters long'\n    }\n  }\n\n  constructor(private cb: FormBuilder,\n    private tweetService: TweetService,\n    public dialogRef: MatDialogRef<ComposeComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.username = this.data;\n  }\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  createForm() {\n    this.composeForm = this.cb.group({\n      topic: ['', [Validators.required, Validators.maxLength(25)]],\n      comment: ['', [Validators.required, Validators.maxLength(500)]]\n    });\n\n    this.composeForm.valueChanges\n      .subscribe((data) => this.onValueChanged(data));\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.composeForm) { return; }\n\n    const form = this.composeForm;\n    for (const field in this.formErrors) {\n      if (this.formErrors.hasOwnProperty(field)) {\n        //clear previous error message (if any)\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (control.errors.hasOwnProperty(key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n\n  onSubmit() {\n    let values = this.composeForm.value;\n    this.tweetService.pushTweet(this.username, values.topic, values.comment);\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { TweetService } from '../services/tweet.service';\nimport { Tweet } from '../shared/tweet';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss']\n})\nexport class EditComponent implements OnInit {\n\n  tweet: Tweet;\n  editForm: FormGroup;\n  @ViewChild('fform', {static: false}) editFormDirective;\n\n  formErrors = {\n    'topic': '',\n    'comment': ''\n  }\n\n  validationMessages = {\n    'topic': {\n      'required': 'A topic is required',\n      'maxlength': 'The topic cannot be more than 25 characters long'\n    },\n    'comment': {\n      'required': 'A comment is required',\n      'maxlength': 'The comment cannot be more than 500 characters long'\n    }\n  }\n\n  constructor(private eb: FormBuilder,\n    private tweetService: TweetService,\n    public dialogRef: MatDialogRef<EditComponent>,\n     @Inject(MAT_DIALOG_DATA) public data: any) {\n       this.tweet = this.data;\n  }\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  createForm() {\n    this.editForm = this.eb.group({\n      topic: [this.tweet.topic, [Validators.required, Validators.maxLength(25)]],\n      comment: [this.tweet.content, [Validators.required, Validators.maxLength(500)]]\n    });\n\n    this.editForm.valueChanges\n      .subscribe((data) => this.onValueChanged(data));\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.editForm) { return; }\n\n    const form = this.editForm;\n    for (const field in this.formErrors) {\n      if (this.formErrors.hasOwnProperty(field)) {\n        //clear previous error message (if any)\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (control.errors.hasOwnProperty(key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n\n  onSubmit() {\n    let values = this.editForm.value;\n    this.tweet.topic = values.topic;\n    this.tweet.content = values.comment;\n    this.tweetService.updateTweet(this.tweet);\n    this.dialogRef.close()\n  }\n\n}\n","module.exports = \".space-top {\\n  margin: 20px 0px 0px 0px;\\n}\\n\\n.gray-text {\\n  color: gray;\\n}\\n\\n.separate {\\n  margin: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2p1YW5ncWNhZGF2aWQvMjAxOTIvc3QwMjYzLXAyL0Zyb250ZW5kL0Zha2VUd2l0dGVyL3NyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx3QkFBQTtBQ0NGOztBREVBO0VBQ0UsV0FBQTtBQ0NGOztBREVBO0VBQ0UsV0FBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNwYWNlLXRvcCB7XG4gIG1hcmdpbjogMjBweCAwcHggMHB4IDBweDtcbn1cblxuLmdyYXktdGV4dCB7XG4gIGNvbG9yOiBncmF5O1xufVxuXG4uc2VwYXJhdGUge1xuICBtYXJnaW46IDVweDtcbn0iLCIuc3BhY2UtdG9wIHtcbiAgbWFyZ2luOiAyMHB4IDBweCAwcHggMHB4O1xufVxuXG4uZ3JheS10ZXh0IHtcbiAgY29sb3I6IGdyYXk7XG59XG5cbi5zZXBhcmF0ZSB7XG4gIG1hcmdpbjogNXB4O1xufSJdfQ== */\"","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Params, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { switchMap } from 'rxjs/operators';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { Subscription } from 'rxjs';\n\nimport { TweetService } from '../services/tweet.service';\nimport { AuthService } from '../services/auth.service';\n\nimport { Filter } from '../shared/filter';\nimport { Tweet } from '../shared/tweet';\n\nimport { ComposeComponent } from '../compose/compose.component';\nimport { EditComponent } from '../edit/edit.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  subscription: Subscription;\n  tweetSubscription: Subscription;\n  username: string = undefined;\n  tweets: Tweet[];\n  filterForm: FormGroup;\n  filter: Filter = null;\n  @ViewChild('fform', {static: false}) filterFormDirective;\n\n\n  constructor(private tweetService: TweetService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private fb: FormBuilder,\n    public dialog: MatDialog) {\n      this.createForm();\n    }\n\n  ngOnInit() {\n    this.tweetSubscription = this.tweetService.getTweets(this.filter)\n      .subscribe((tweets) => this.tweets = tweets);\n    this.authService.loadUserCredentials();\n    this.subscription = this.authService.getUsername()\n      .subscribe(name => { console.log('home: ' + name); this.username = name; });\n  }\n\n  createForm() {\n    this.filterForm = this.fb.group({\n      author: ['', []],\n      topic: ['', []],\n    });\n  }\n\n  onSubmit() {\n    // Filter\n    this.filter = this.filterForm.value;\n    this.ngOnInit();\n  }\n\n  deleteTweet(tweet: Tweet) {\n    this.tweetService.deleteTweet(tweet);\n    this.ngOnInit();\n  }\n\n  openComposeForm() {\n    this.dialog.open(ComposeComponent, {\n      data: this.username\n    });\n  }\n\n  openEditForm(tweet: Tweet) {\n    this.dialog.open(EditComponent, {\n      data: tweet\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material';\n\nimport { User } from '../shared/user';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  user: User;\n  loginForm: FormGroup;\n  @ViewChild('fform', {static: false}) loginFormDirective;\n\n  formErrors = {\n    'username': '',\n    'password': ''\n  };\n\n  validationMessages = {\n    'username': {\n      'required': 'Username is required'\n    },\n    'password': {\n      'required': 'Password is required'\n    }\n  }\n\n  constructor(private lb: FormBuilder,\n    private authService: AuthService,\n    public dialogRef: MatDialogRef<LoginComponent>) {\n    this.createForm();\n   }\n\n  ngOnInit() {\n  }\n\n  createForm() {\n    this.loginForm = this.lb.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n\n    this.loginForm.valueChanges\n      .subscribe((data) => this.onValueChanged(data));\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.loginForm) { return; }\n\n    const form = this.loginForm;\n    for (const field in this.formErrors) {\n      if (this.formErrors.hasOwnProperty(field)) {\n        //clear previous error message (if any)\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (control.errors.hasOwnProperty(key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n\n  onSubmit() {\n    this.user = this.loginForm.value;\n    this.authService.logIn(this.user).subscribe(res => {\n      if (res.success) {\n        this.dialogRef.close(res.success);\n      } else {\n        console.log(res);\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public auth: AuthService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.auth.isLoggedIn()) {\n      this.router.navigate(['home']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private inj: Injector) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const authService = this.inj.get(AuthService);\n    // Get the auth header from the service.\n    const authToken = authService.getToken();\n    // console.log(\"Interceptor: \" + authToken);\n    // Clone the request to add the new header.\n    const authReq = req.clone({headers: req.headers.set('Authorization', 'bearer ' + authToken)});\n\n        // Pass on the cloned request instead of the original request.\n    return next.handle(authReq);\n  }\n}\n\n@Injectable()\nexport class UnauthorizedInterceptor implements HttpInterceptor {\n  constructor(private inj: Injector) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const authService = this.inj.get(AuthService);\n    const authToken = authService.getToken();\n\n    return next\n      .handle(req)\n      .pipe(tap((event: HttpEvent<any>) => {\n        // do nothing\n      }, (err: any) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 401 && authToken) {\n            console.log('Unauthorized Interceptor: ', err);\n            authService.checkJWTtoken();\n          }\n        }\n      }));\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { baseURL } from '../shared/baseurl';\n\ninterface AuthResponse {\n  status: string;\n  success: string;\n  token: string;\n}\n\ninterface JWTResponse {\n  status: string;\n  success: string;\n  user: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  tokenKey = 'JWT';\n  isAuthenticated: Boolean = false;\n  username: Subject<string> = new Subject<string>();\n  authToken: string = undefined;\n\n   constructor(private http: HttpClient) {}\n\n   checkJWTtoken() {\n     this.http.get<JWTResponse>(baseURL + 'users/checkJWTtoken')\n     .subscribe(res => {\n       console.log('JWT Token Valid: ', res);\n       this.sendUsername(res.user.username);\n     },\n     err => {\n       console.log('JWT Token invalid: ', err);\n       this.destroyUserCredentials();\n     });\n   }\n\n   sendUsername(name: string) {\n     this.username.next(name);\n   }\n\n   clearUsername() {\n     this.username.next(undefined);\n   }\n\n   loadUserCredentials() {\n     const credentials = JSON.parse(localStorage.getItem(this.tokenKey));\n     console.log('loadUserCredentials ', credentials);\n     if (credentials && credentials.username !== undefined) {\n       this.useCredentials(credentials);\n       if (this.authToken) {\n        this.checkJWTtoken();\n       }\n     }\n   }\n\n   storeUserCredentials(credentials: any) {\n     console.log('storeUserCredentials ', credentials);\n     localStorage.setItem(this.tokenKey, JSON.stringify(credentials));\n     this.useCredentials(credentials);\n   }\n\n   useCredentials(credentials: any) {\n     this.isAuthenticated = true;\n     this.sendUsername(credentials.username);\n     this.authToken = credentials.token;\n   }\n\n   destroyUserCredentials() {\n     this.authToken = undefined;\n     this.clearUsername();\n     this.isAuthenticated = false;\n     localStorage.removeItem(this.tokenKey);\n   }\n\n   signUp(user: any): Observable<any> {\n     return this.http.post<AuthResponse>(baseURL + 'users/signup',\n       {'username': user.username, 'password': user.password})\n       .pipe( map(res => {\n           return {'success': true, 'username': user.username };\n       }));\n   }\n\n   logIn(user: any): Observable<any> {\n     console.log(\"logging in: \" + user);\n     return this.http.post<AuthResponse>(baseURL + 'users/login',\n       {'username': user.username, 'password': user.password})\n       .pipe( map(res => {\n           this.storeUserCredentials({username: user.username, token: res.token});\n           return {'success': true, 'username': user.username };\n       }));\n   }\n\n   logOut() {\n     this.destroyUserCredentials();\n   }\n\n   isLoggedIn(): Boolean {\n     return this.isAuthenticated;\n   }\n\n   getUsername(): Observable<string> {\n     return this.username.asObservable();\n   }\n\n   getToken(): string {\n     return this.authToken;\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Tweet } from '../shared/tweet';\nimport { Filter } from '../shared/filter';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { baseURL } from '../shared/baseurl';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TweetService {\n\n  private tweets: Tweet[];\n\n  constructor(private http: HttpClient) { }\n\n  getTweets(filter?: Filter) : Observable<Tweet[]> {\n    if (filter) {\n      if (filter.author && filter.author.length > 0) {\n        return this.http.get<Tweet[]>(baseURL + 'tweets?author=' + filter.author)\n      }\n      if (filter.topic && filter.topic.length > 0) {\n        return this.http.get<Tweet[]>(baseURL + 'tweets?topic=' + filter.topic)\n      }\n    }\n    return this.http.get<Tweet[]>(baseURL + 'tweets');\n  }\n\n  getTweet(id: string) : Observable<Tweet> {\n    return this.http.get<Tweet>(baseURL + 'tweets/' + id);\n  }\n\n  updateTweet(tweet: Tweet) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.http.put<Tweet>(baseURL + 'tweets/' + tweet._id, tweet, httpOptions)\n      .subscribe(response => {});\n    // Subscribe to observables to activate them\n  }\n\n  pushTweet(author: string, topic: string, content: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.http.post<Tweet>(baseURL + 'tweets/',\n      { author: author, topic: topic, content: content }, httpOptions)\n      .subscribe(response => {});\n  }\n\n  deleteTweet(tweet: Tweet) {\n    this.http.delete(baseURL + 'tweets/' + tweet._id)\n      .subscribe(response => {});\n  }\n\n}\n","export const baseURL = 'https://api-v8.tk/';\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Npbmd1cC9zaW5ndXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material';\n\nimport { User } from '../shared/user';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-singup',\n  templateUrl: './singup.component.html',\n  styleUrls: ['./singup.component.scss']\n})\nexport class SingupComponent implements OnInit {\n\n  user: User;\n  signupForm: FormGroup;\n  @ViewChild('fform', {static: false}) signupFormDirective;\n\n  formErrors = {\n    'username': '',\n    'password': ''\n  };\n\n  validationMessages = {\n    'username': {\n      'required': 'Username is required'\n    },\n    'password': {\n      'required': 'Password is required'\n    }\n  }\n\n  constructor(private sb: FormBuilder,\n    private authService: AuthService,\n    public dialogRef: MatDialogRef<SingupComponent>) {\n      this.createForm();\n    }\n\n  ngOnInit() {\n  }\n\n  createForm() {\n    this.signupForm = this.sb.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n\n    this.signupForm.valueChanges\n      .subscribe((data) => this.onValueChanged(data));\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.signupForm) { return; }\n\n    const form = this.signupForm;\n    for (const field in this.formErrors) {\n      if (this.formErrors.hasOwnProperty(field)) {\n        //clear previous error message (if any)\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (control.errors.hasOwnProperty(key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n\n  onSubmit() {\n    this.user = this.signupForm.value;\n    this.authService.signUp(this.user).subscribe(res => {\n      if (res.success) {\n        this.dialogRef.close(res.success);\n      } else {\n        console.log(res);\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rvb2xiYXIvdG9vbGJhci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { Subscription } from 'rxjs';\n\nimport { LoginComponent } from '../login/login.component';\nimport { SingupComponent } from '../singup/singup.component';\n\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n\n  user: string;\n  subscription : Subscription;\n\n  constructor(private authService: AuthService,\n    public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.authService.loadUserCredentials();\n    this.subscription = this.authService.getUsername()\n      .subscribe(name => { console.log('toolbar: ' + name); this.user = name; });\n  }\n\n  openLoginForm() {\n    this.dialog.open(LoginComponent);\n  }\n\n  openSignUpForm() {\n    this.dialog.open(SingupComponent);\n  }\n\n  logOut() {\n    this.authService.logOut();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}